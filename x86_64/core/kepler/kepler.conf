#
# /etc/kepler.conf
#
# See the kepler.conf(5) manpage for option and repository directives

#
# GENERAL OPTIONS
#
[options]
# The following paths are commented out with their default values listed.
# If you wish to use different paths, uncomment and update the paths.
#RootDir     = /
#DBPath      = /var/lib/kepler/
#CacheDir    = /var/cache/kepler/pkg/
#LogFile     = /var/log/kepler.log
#GPGDir      = /etc/kepler.d/gnupg/
#HookDir     = /etc/kepler.d/hooks/
HoldPkg		= kepler glibc
#XferCommand = /usr/bin/curl -L -C - -f -o %o %u
#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u
#CleanMethod = KeepInstalled
Architecture = auto

# Kepler won't upgrade packages listed in IgnorePkg and members of IgnoreGroup
#IgnorePkg   =
#IgnoreGroup =

#NoUpgrade   =
#NoExtract   =

# Misc options
#UseSyslog
Color
#NoProgressBar
CheckSpace
#VerbosePkgLists
ParallelDownloads = 5

# PGP signature checking
#SigLevel = Optional
#LocalFileSigLevel = Optional
#RemoteFileSigLevel = Optional

#
# REPOSITORIES
#   - can be defined here or included from another file
#   - kepler will search repositories in the order defined here
#   - local/custom mirrors can be added here or in separate files
#   - repositories listed first will take precedence when packages
#     have identical names, regardless of version number
#   - URLs will have $repo replaced by the name of the current repo
#   - URLs will have $arch replaced by the name of the architecture
#
# Repository entries are of the format:
#       [repo-name]
#       Server = ServerName
#       Include = IncludePath
#
# The header [repo-name] is crucial - it must be present and
# uncommented to enable the repo.
#

# An example of a disabled remote package repository with multiple servers
# available. To enable, uncomment the following lines. You can add preferred
# servers immediately after the header and they will be used before the
# default mirrors.

[core]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[extra]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[extra32]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[cross_tools]
Server = https://git.n64.cc/ufolinux/repository/$arch/cross_tools/-/raw/main/packages/

[games]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[layers]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[proprietary]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[server]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[pentest]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[perl]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[python]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[gnome]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[kde]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/

[xfce]
Server = https://git.n64.cc/ufolinux/repository/$arch/$repo/-/raw/main/packages/



# An example of a custom package repository.  See the kepler manpage for
# tips on creating your own repositories.
#[custom]
#SigLevel = Optional TrustAll
#Server = file:///home/custompkgs