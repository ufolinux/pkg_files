pkgname=wine
# Versioning YY/MM/DD/HH YEAR/MONTH/DAY/HOUR ( HOUR = 24H FORMAT ) FROM PATCH FILE
pkgver=8.0
ever=
pkgrel=1
source=(https://dl.winehq.org/wine/source/8.0/wine-$pkgver.tar.xz
	30-win32-aliases.conf
	wine-binfmt.conf
	wine-reset
	https://github.com/wine-mirror/wine/commit/83199991ed9df2e3869e60d98b7ead78019caaf2.patch)
pkgdesc="A compatibility layer for running Windows programs"
url="https://www.winehq.org/"
arch=(x86_64)
options=(staticlibs !lto)
depends=(
	fontconfig lib32-fontconfig
	lcms lib32-lcms
	libxml2 lib32-libxml2
	libxcursor lib32-libxcursor
	libxrandr lib32-libxrandr
	libxdamage lib32-libxdamage
	libxi lib32-libxi
	gettext lib32-gettext
	freetype2 lib32-freetype2
	glu lib32-glu
	libsm lib32-libsm
	gcc
	libpcap lib32-libpcap
#	faudio lib32-faudio
	desktop-file-utils
	mesa lib32-mesa
)

makedepends=(
	autoconf
	bison
	perl
	fontforge
	flex
	giflib lib32-giflib
	libpng lib32-libpng
	gnutls lib32-gnutls
	libxinerama lib32-libxinerama
	libxcomposite lib32-libxcomposite
	libxmu lib32-libxmu
	libxxf86vm lib32-libxxf86vm
	openldap lib32-openldap
#	mpg123 lib32-mpg123
	openal lib32-openal
#	v4l-utils lib32-v4l-utils
	pulseaudio lib32-pulseaudio
	alsa-lib lib32-alsa-lib
	libxcomposite lib32-libxcomposite
	mesa lib32-mesa
	opencl-icd-loader lib32-opencl-icd-loader
	libxslt lib32-libxslt
	gst-plugins-base #lib32-gst-plugins-base
	vulkan-icd-loader lib32-vulkan-icd-loader
	vkd3d lib32-vkd3d
	sdl2 lib32-sdl2
	cups #lib32-cups
	libgphoto2
	sane
#	gsm
	vulkan-headers
	samba
	opencl-headers
)

install=wine.install

prepare() {
	# patch the wine
	cd wine-$pkgver
	patch -p1 -i $srcdir/83199991ed9df2e3869e60d98b7ead78019caaf2.patch
	cd $srcdir

	# clean if rebuild
	rm -rf wine

	# Rename wine folder
	mv wine-$pkgver wine

	sed 's|OpenCL/opencl.h|CL/opencl.h|g' -i $pkgname/configure*

	# Fix openldap 2.5+ detection
	sed 's/-lldap_r/-lldap/' -i $pkgname/configure

	# Get rid of old build dirs
	rm -rf $pkgname-{32,64}-build
	mkdir -p $pkgname-32-build $pkgname-64-build

	# Run post req
	cd wine

	tools/make_requests
	dlls/winevulkan/make_vulkan -x /usr/share/vulkan/registry/vk.xml

	# Configure pkg here
	# AMD64
	cd "$srcdir/$pkgname-64-build"
	../$pkgname/configure \
	--prefix=/usr \
	--libdir=/usr/lib \
	--with-x \
	--with-gstreamer \
	--enable-win64 \
	--disable-tests

	# I686
	export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
	cd "$srcdir/$pkgname-32-build"
	../$pkgname/configure \
	--prefix=/usr \
	--libdir=/usr/lib32 \
	--with-wine64="$srcdir/$pkgname-64-build" \
	--with-x \
	--without-gstreamer \
	--disable-tests
}

build() {
	cd "$srcdir"

	# AMD64
	echo "Building Wine-64..."
	cd "$srcdir/$pkgname-64-build"
	make -j4

	# I686
	echo "Building Wine-32..."
	cd "$srcdir/$pkgname-32-build"
	make -j4
}

package() {
	echo "Packaging Wine-32..."
	cd "$srcdir/$pkgname-32-build"

	make prefix="$pkgdir/usr" \
	libdir="$pkgdir/usr/lib32" \
	dlldir="$pkgdir/usr/lib32/wine" install

	echo "Packaging Wine-64..."
	cd "$srcdir/$pkgname-64-build"
	make prefix="$pkgdir/usr" \
	libdir="$pkgdir/usr/lib" \
	dlldir="$pkgdir/usr/lib/wine" install

	# Font aliasing settings for Win32 applications
	install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
	install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
	ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
	install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"

	# Install wine-reset 
	cp $srcdir/wine-reset $pkgdir/usr/bin/wine-reset
	chmod +x $pkgdir/usr/bin/wine-reset
}
