pkgname=clang
pkgver=13.0.1
pkgrel=1
makedepends=('cmake' 'python3' 'llvm')
depends=('llvm' 'compiler-rt')
arch=('x86_64')
psource=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($psource/$pkgname-$pkgver.src.tar.xz
	$psource/clang-tools-extra-$pkgver.src.tar.xz
	$psource/llvm-$pkgver.src.tar.xz
	01.patch
	02.patch
	03.patch)

prepare() {
	cd $pkgname-$pkgver.src
	mkdir -p build

	mv $srcdir/clang-tools-extra-$pkgver.src tools/extra

	patch -Np2 -i ../01.patch
	patch -Np2 -i ../02.patch
	patch -Np2 -i ../03.patch
	
	2to3 -wn --no-diffs \
	tools/extra/clang-include-fixer/find-all-symbols/tool/run-find-all-symbols.py
}

build() {
	cd $pkgname-$pkgver.src/build
	
	cmake .. -G Ninja		\
	-DCMAKE_BUILD_TYPE=Release	\
	-DCMAKE_INSTALL_PREFIX=/usr	\
	-DCLANG_LINK_CLANG_DYLIB=ON	\
	-DLLVM_LINK_LLVM_DYLIB=ON	\
	-DLLVM_ENABLE_RTTI=ON		\
	-DLLVM_EXTERNAL_LIB=/usr/bin/lit	\
	-DLLVM_MAIN_SRC_DIR="$srcdir/llvm-$pkgver.src"
	
	ninja
}

python_optimize() {
	python3 -m compileall "$@"
	python3 -O -m compileall "$@"
	python -OO -m compileall "$@"
}

package() {
	cd $pkgname-$pkgver.src/build

	DESTDIR=$pkgdir ninja install

	local site_packages=$(python3 -c "import site; print(site.getsitepackages()[0])")
	install -d "$pkgdir/$site_packages"
	mv "$pkgdir"/usr/lib/{libear,libscanbuild} "$pkgdir/$site_packages"
	cp -a ../bindings/python/clang "$pkgdir/$site_packages/"

	mv "$pkgdir"/usr/libexec/* "$pkgdir/usr/lib/clang"
	rm -rf "$pkgdir/usr/libexec"
	sed -i 's|libexec|lib/clang|' \
		"$pkgdir/usr/bin/scan-build" \
		"$pkgdir/$site_packages/libscanbuild/analyze.py"

	python_optimize "$pkgdir/usr/share" "$pkgdir/$site_packages"
}
